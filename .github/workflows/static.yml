name: Deploy Static Content to GitHub Pages

on:
  push:
    branches: ["main", "develop", "feature/*", "R*"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Pages
        uses: actions/configure-pages@v5
      
      - name: Prepare Deployment Content
        run: |
          mkdir -p _site
          # 保存当前分支名称
          current_branch="${{ github.ref_name }}"
          
          # 复制现有的 _site 内容（如果存在）
          if [ -d "_site" ]; then
            cp -r _site _site_temp
          fi
          
          # 复制所有分支内容
          git for-each-ref --format='%(refname:short)' refs/heads | while read branch; do
            git checkout $branch
            if [ "$branch" = "main" ]; then
              cp -r * _site/ || true
            else
              mkdir -p _site/$branch
              cp -r * _site/$branch/ || true
            fi
          done
          
          # 如果存在之前的 _site 内容，合并回来
          if [ -d "_site_temp" ]; then
            cp -r _site_temp/* _site/
            rm -rf _site_temp
          fi
          
          # 确保当前分支内容是最新的
          git checkout $current_branch
          if [ "$current_branch" = "main" ]; then
            cp -r * _site/ || true
          else
            rm -rf _site/$current_branch
            mkdir -p _site/$current_branch
            cp -r * _site/$current_branch/ || true
          fi
      
      - name: List deployment content
        run: ls -R _site
      
      - name: Upload Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '_site'
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4